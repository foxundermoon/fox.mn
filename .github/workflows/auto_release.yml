name: auto release

on:
  push:
    paths-ignore:
      - .github/workflows/ci.yml
      - README.*
    branches:
      - master
      - releases/**

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      OUT_DIR: ./out
    steps:
      - name: check prerelease
        if: endsWith(github.event.head_commit.message,':prerelease')
        run: |
          echo "::set-env name=RELEASE_TYPE::prerelease"
          echo "::set-env name=PRERELEASE::true"
          echo "::set-env name=NEED_RELEASE::yes"
      - name: check release
        if: endsWith(github.event.head_commit.message,':release')
        run: |
          echo "::set-env name=RELEASE_TYPE::release"
          echo "::set-env name=PRERELEASE::false"
          echo "::set-env name=NEED_RELEASE::yes"

      - uses: actions/checkout@v2
        if: env.NEED_RELEASE == 'yes'

      # -----------------  build number ----------------------------------------
      - name: Generate build number
        if: env.NEED_RELEASE == 'yes'
        id: buildnumber
        uses: einaregilsson/build-number@v2
        with:
          token: ${{secrets.github_token}}
      - name: set version env
        run: |
          echo "::set-env name=VERSION::$(jq '.version' -r  package.json)"
      - run: sudo timedatectl set-timezone Asia/Shanghai
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        if: env.NEED_RELEASE == 'yes'
        with:
          node-version: 12.x
      # ------------------------- release  ------------------------------
      - run: yarn
        if: env.NEED_RELEASE == 'yes'
      - name: build and export
        if: env.NEED_RELEASE == 'yes'
        env:
          NODE_ENV: production
          TEL: ${{ secrets.TEL }}
        run: |
          yarn build
          yarn export
      - name: Create Release
        if: env.NEED_RELEASE == 'yes'
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION }}.${{ steps.buildnumber.outputs.build_number }}
          release_name: Release ${{ env.VERSION }}.${{ steps.buildnumber.outputs.build_number }}
          body: |
            #  auto release
          draft: false
          prerelease: ${{ env.PRERELEASE }}
      - name: gen file name
        if: env.NEED_RELEASE == 'yes'
        run: |
          name=$(cat ./package.json |jq -r .name)
          fileName=${name}-${{ env.VERSION }}.${{ steps.buildnumber.outputs.build_number }}.tar.gz
          tar  -cf "./${fileName}"   ./out
          echo "::set-env name=FILE_NAME::${fileName}"

      - name: Upload Release Asset
        if: env.NEED_RELEASE == 'yes'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./${{ env.FILE_NAME }}
          asset_name: ${{ env.FILE_NAME }}
          asset_content_type: application/gzip

      #  ---------------- upload bucket --------------------------------------
      - name: Setup qshell
        uses: foxundermoon/setup-qshell@v1
        if: env.NEED_RELEASE == 'yes' && env.RELEASE_TYPE == 'release'
        with:
          qshell-version: '2.4.1'
      - name: show qshell version
        if: env.NEED_RELEASE == 'yes' && env.RELEASE_TYPE == 'release'
        run: qshell version
      - name: login qshell
        if: env.NEED_RELEASE == 'yes' && env.RELEASE_TYPE == 'release'
        run: |
          qshell account ${{ secrets.QN_AK }} ${{ secrets.QN_SK }} foxmn
      - name: clear-bucket
        if: env.CLEAR_BUCKET == 'yes' && env.NEED_RELEASE == 'yes' && env.RELEASE_TYPE == 'release'
        run: |
          qshell listbucket ${{ secrets.QN_BUCKET }} -o filelist
          qshell batchdelete  ${{ secrets.QN_BUCKET }}  -y  -i  filelist

      - name: upload
        if: env.NEED_RELEASE == 'yes' && env.RELEASE_TYPE == 'release'
        run: |
          qshell  qupload2   \
          --bucket  ${{ secrets.QN_BUCKET }}  \
          --overwrite  \
          --src-dir . \
          --log-file ../upload.log \
          --thread-count 100
        working-directory: ./out
      - uses: actions/upload-artifact@v1
        if: env.NEED_RELEASE == 'yes' && env.RELEASE_TYPE == 'release'
        with:
          name: upload.log
          path: ./upload.log
      - name: refresh-cdn
        if: env.NEED_RELEASE == 'yes' && env.RELEASE_TYPE == 'release'
        working-directory: ./out
        run: |
          find . | grep -v '^./_next' | \
          sed  -e 's|./|https://fox.mn/|' | \
          sed  -n '1d;p'  | \
          tee -a refresh.xt | \
          qshell cdnrefresh

          echo 'https://fox.mn' |qshell cdnrefresh
          echo 'https://fox.mn/' |qshell cdnrefresh

          find . | grep -v '^./_next' | \
          grep -v 'index.html' | \
          grep -v '.ico' | \
          sed  -e 's|./|https://fox.mn/|' | \
          sed  -n '1d;p'  | \
          xargs -I ^_^ echo '^_^/' | \
          tee -a refresh.xt | \
          qshell cdnrefresh

      - name: deploy website success
        uses: foxundermoon/feishu-action@v1
        if: env.NEED_RELEASE == 'yes'
        with:
          url: ${{ secrets.FEISHU_BOT }}
          title: website ${{ env.RELEASE_TYPE }} success
          text: |
            view:   ${{ steps.deploy.outputs.preview-url }}
            release: ${{ github.event.repository.html_url }}/releases/tag/${{ env.VERSION }}.${{ steps.buildnumber.outputs.build_number }}
            action detail: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}
            committer: ${{ github.actor }}
            repo: ${{ github.event.repository.html_url }}
            compare: ${{ github.event.compare }}
            headCommit: ${{ github.event.head_commit.url }}
      - name: release action failed notice
        uses: foxundermoon/feishu-action@v1
        if: env.NEED_RELEASE == 'yes' && failure()
        with:
          url: ${{ secrets.FEISHU_BOT }}
          title: website ${{ env.RELEASE_TYPE }} failure
          text: |
            action detail: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}
            repo: ${{ github.event.repository.html_url }}
            headCommit: ${{ github.event.head_commit.url }}
            committer: ${{ github.actor }}
            compare: ${{ github.event.compare }}